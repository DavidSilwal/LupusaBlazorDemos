@page "/rawhtml"

@addTagHelper *, BlazorLib3
@using BlazorLib3





<h5>You can watch 4 mins <a href="https://www.youtube.com/watch?v=KjeL3H04bIU" target="_blank">video demonstration</a></h5>


<h4 style="color:blue;">Input Raw html</h4>

<h7>It is experimental and probably won't handle all html inputs</h7>
<br />
<div>

    <textarea bind="@_RawHTML" rows="4" cols="50">
</textarea>

    @* <input bind="@_RawHTML" type="text" width="500" height="200" placeholder="enter raw html" />*@

    <button class="btn btn-primary" onclick="@cmd_convert">Run</button>
    <button class="btn btn-primary" onclick="@cmd_clear">Clear</button>

</div>

<br />

<h3 style="color:red;">Result:</h3>
<br />
<div>


    <CompRawHTML2 RawHTML="@_RawHTML"></CompRawHTML2>

    @*<CompRawHTML bind-RawHTML="@_RawHTML"></CompRawHTML>*@
    @*@foreach (var item in tmp_List)
        {

            <div>

                <CompRawHTML RawHTML="@item"></CompRawHTML>

            </div>


        }*@



</div>




@functions{

    //   @import CompRawHTML


    // List<string> tmp_List = new List<string>();


    [Parameter]
    private string _RawHTML { get; set; } = "<h2>hello</h2>";



    //protected override void OnInit()
    //{
    //    Console.WriteLine("RawHTML OnInit fired ");
    //}

    //public override void SetParameters(ParameterCollection parameters)
    //{


    //    string a = string.Empty;

    //    parameters.TryGetValue("_RawHTML", out a);
    //    Console.WriteLine("RawHTML SetParameters fired " + a);

    //    base.SetParameters(parameters);
    //}

    //protected override bool ShouldRender()
    //{
    //    Console.WriteLine("RawHTML ShouldRender fired");

    //    var renderUI = true;

    //    return renderUI;
    //}

    void cmd_convert()
    {


        StateHasChanged();

    }

    void cmd_clear()
    {

        _RawHTML = string.Empty;

        StateHasChanged();

    }
}
